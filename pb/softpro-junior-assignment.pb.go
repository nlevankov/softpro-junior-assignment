// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: softpro-junior-assignment.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SubscribeOnSportsLinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval   uint32   `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"`
	SportNames []string `protobuf:"bytes,2,rep,name=sport_names,json=sportNames,proto3" json:"sport_names,omitempty"`
}

func (x *SubscribeOnSportsLinesRequest) Reset() {
	*x = SubscribeOnSportsLinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_softpro_junior_assignment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeOnSportsLinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOnSportsLinesRequest) ProtoMessage() {}

func (x *SubscribeOnSportsLinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_softpro_junior_assignment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOnSportsLinesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeOnSportsLinesRequest) Descriptor() ([]byte, []int) {
	return file_softpro_junior_assignment_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeOnSportsLinesRequest) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *SubscribeOnSportsLinesRequest) GetSportNames() []string {
	if x != nil {
		return x.SportNames
	}
	return nil
}

type SubscribeOnSportsLinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportInfos []*SportInfo `protobuf:"bytes,1,rep,name=sport_infos,json=sportInfos,proto3" json:"sport_infos,omitempty"`
}

func (x *SubscribeOnSportsLinesResponse) Reset() {
	*x = SubscribeOnSportsLinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_softpro_junior_assignment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeOnSportsLinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOnSportsLinesResponse) ProtoMessage() {}

func (x *SubscribeOnSportsLinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_softpro_junior_assignment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOnSportsLinesResponse.ProtoReflect.Descriptor instead.
func (*SubscribeOnSportsLinesResponse) Descriptor() ([]byte, []int) {
	return file_softpro_junior_assignment_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeOnSportsLinesResponse) GetSportInfos() []*SportInfo {
	if x != nil {
		return x.SportInfos
	}
	return nil
}

type SportInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Line float32 `protobuf:"fixed32,2,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *SportInfo) Reset() {
	*x = SportInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_softpro_junior_assignment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SportInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportInfo) ProtoMessage() {}

func (x *SportInfo) ProtoReflect() protoreflect.Message {
	mi := &file_softpro_junior_assignment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportInfo.ProtoReflect.Descriptor instead.
func (*SportInfo) Descriptor() ([]byte, []int) {
	return file_softpro_junior_assignment_proto_rawDescGZIP(), []int{2}
}

func (x *SportInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SportInfo) GetLine() float32 {
	if x != nil {
		return x.Line
	}
	return 0
}

var File_softpro_junior_assignment_proto protoreflect.FileDescriptor

var file_softpro_junior_assignment_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x6f, 0x66, 0x74, 0x70, 0x72, 0x6f, 0x2d, 0x6a, 0x75, 0x6e, 0x69, 0x6f, 0x72,
	0x2d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5c, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x6e,
	0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x4d, 0x0a, 0x1e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x6e, 0x53, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x33,
	0x0a, 0x09, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x65, 0x32, 0x73, 0x0a, 0x12, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x6e,
	0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x16, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x6e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f,
	0x6e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f,
	0x6e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x66, 0x74, 0x70, 0x72, 0x6f, 0x2d, 0x6a,
	0x75, 0x6e, 0x69, 0x6f, 0x72, 0x2d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_softpro_junior_assignment_proto_rawDescOnce sync.Once
	file_softpro_junior_assignment_proto_rawDescData = file_softpro_junior_assignment_proto_rawDesc
)

func file_softpro_junior_assignment_proto_rawDescGZIP() []byte {
	file_softpro_junior_assignment_proto_rawDescOnce.Do(func() {
		file_softpro_junior_assignment_proto_rawDescData = protoimpl.X.CompressGZIP(file_softpro_junior_assignment_proto_rawDescData)
	})
	return file_softpro_junior_assignment_proto_rawDescData
}

var file_softpro_junior_assignment_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_softpro_junior_assignment_proto_goTypes = []interface{}{
	(*SubscribeOnSportsLinesRequest)(nil),  // 0: SubscribeOnSportsLinesRequest
	(*SubscribeOnSportsLinesResponse)(nil), // 1: SubscribeOnSportsLinesResponse
	(*SportInfo)(nil),                      // 2: SportInfo
}
var file_softpro_junior_assignment_proto_depIdxs = []int32{
	2, // 0: SubscribeOnSportsLinesResponse.sport_infos:type_name -> SportInfo
	0, // 1: SportsLinesService.SubscribeOnSportsLines:input_type -> SubscribeOnSportsLinesRequest
	1, // 2: SportsLinesService.SubscribeOnSportsLines:output_type -> SubscribeOnSportsLinesResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_softpro_junior_assignment_proto_init() }
func file_softpro_junior_assignment_proto_init() {
	if File_softpro_junior_assignment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_softpro_junior_assignment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeOnSportsLinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_softpro_junior_assignment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeOnSportsLinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_softpro_junior_assignment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SportInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_softpro_junior_assignment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_softpro_junior_assignment_proto_goTypes,
		DependencyIndexes: file_softpro_junior_assignment_proto_depIdxs,
		MessageInfos:      file_softpro_junior_assignment_proto_msgTypes,
	}.Build()
	File_softpro_junior_assignment_proto = out.File
	file_softpro_junior_assignment_proto_rawDesc = nil
	file_softpro_junior_assignment_proto_goTypes = nil
	file_softpro_junior_assignment_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SportsLinesServiceClient is the client API for SportsLinesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SportsLinesServiceClient interface {
	SubscribeOnSportsLines(ctx context.Context, opts ...grpc.CallOption) (SportsLinesService_SubscribeOnSportsLinesClient, error)
}

type sportsLinesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSportsLinesServiceClient(cc grpc.ClientConnInterface) SportsLinesServiceClient {
	return &sportsLinesServiceClient{cc}
}

func (c *sportsLinesServiceClient) SubscribeOnSportsLines(ctx context.Context, opts ...grpc.CallOption) (SportsLinesService_SubscribeOnSportsLinesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SportsLinesService_serviceDesc.Streams[0], "/SportsLinesService/SubscribeOnSportsLines", opts...)
	if err != nil {
		return nil, err
	}
	x := &sportsLinesServiceSubscribeOnSportsLinesClient{stream}
	return x, nil
}

type SportsLinesService_SubscribeOnSportsLinesClient interface {
	Send(*SubscribeOnSportsLinesRequest) error
	Recv() (*SubscribeOnSportsLinesResponse, error)
	grpc.ClientStream
}

type sportsLinesServiceSubscribeOnSportsLinesClient struct {
	grpc.ClientStream
}

func (x *sportsLinesServiceSubscribeOnSportsLinesClient) Send(m *SubscribeOnSportsLinesRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sportsLinesServiceSubscribeOnSportsLinesClient) Recv() (*SubscribeOnSportsLinesResponse, error) {
	m := new(SubscribeOnSportsLinesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SportsLinesServiceServer is the server API for SportsLinesService service.
type SportsLinesServiceServer interface {
	SubscribeOnSportsLines(SportsLinesService_SubscribeOnSportsLinesServer) error
}

// UnimplementedSportsLinesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSportsLinesServiceServer struct {
}

func (*UnimplementedSportsLinesServiceServer) SubscribeOnSportsLines(SportsLinesService_SubscribeOnSportsLinesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeOnSportsLines not implemented")
}

func RegisterSportsLinesServiceServer(s *grpc.Server, srv SportsLinesServiceServer) {
	s.RegisterService(&_SportsLinesService_serviceDesc, srv)
}

func _SportsLinesService_SubscribeOnSportsLines_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SportsLinesServiceServer).SubscribeOnSportsLines(&sportsLinesServiceSubscribeOnSportsLinesServer{stream})
}

type SportsLinesService_SubscribeOnSportsLinesServer interface {
	Send(*SubscribeOnSportsLinesResponse) error
	Recv() (*SubscribeOnSportsLinesRequest, error)
	grpc.ServerStream
}

type sportsLinesServiceSubscribeOnSportsLinesServer struct {
	grpc.ServerStream
}

func (x *sportsLinesServiceSubscribeOnSportsLinesServer) Send(m *SubscribeOnSportsLinesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sportsLinesServiceSubscribeOnSportsLinesServer) Recv() (*SubscribeOnSportsLinesRequest, error) {
	m := new(SubscribeOnSportsLinesRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SportsLinesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SportsLinesService",
	HandlerType: (*SportsLinesServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeOnSportsLines",
			Handler:       _SportsLinesService_SubscribeOnSportsLines_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "softpro-junior-assignment.proto",
}
